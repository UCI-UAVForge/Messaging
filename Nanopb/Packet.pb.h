/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.4 at Sun Nov 15 16:49:20 2015. */

#ifndef PB_PACKET_PB_H_INCLUDED
#define PB_PACKET_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _uavforge_Packet_MessageType {
    uavforge_Packet_MessageType_ACK = 0,
    uavforge_Packet_MessageType_TELEM = 1,
    uavforge_Packet_MessageType_ACTION = 2,
    uavforge_Packet_MessageType_UPDATE = 3,
    uavforge_Packet_MessageType_INFO = 4
} uavforge_Packet_MessageType;

typedef enum _uavforge_ActionPacket_ActionType {
    uavforge_ActionPacket_ActionType_START = 0,
    uavforge_ActionPacket_ActionType_REQUEST_INFO = 1,
    uavforge_ActionPacket_ActionType_ADD_WAYPOINT = 2,
    uavforge_ActionPacket_ActionType_SET_HOME = 3,
    uavforge_ActionPacket_ActionType_REMOVE_WAYPOINT = 4,
    uavforge_ActionPacket_ActionType_STOP = 14,
    uavforge_ActionPacket_ActionType_SHUTDOWN = 15
} uavforge_ActionPacket_ActionType;

/* Struct definitions */
typedef struct _uavforge_AckPacket {
    uint64_t ackTimestamp;
} uavforge_AckPacket;

typedef struct _uavforge_ActionPacket {
    int32_t priority;
    uavforge_ActionPacket_ActionType action_type;
    pb_callback_t waypoints;
} uavforge_ActionPacket;

typedef struct _uavforge_ActionPacket_WaypointPacket {
    int32_t seqNo;
    double lat;
    double lng;
    float alt;
    float speed;
} uavforge_ActionPacket_WaypointPacket;

typedef struct _uavforge_InfoPacket {
    bool has_pointsStorable;
    uint32_t pointsStorable;
    bool has_battery;
    uint32_t battery;
    pb_callback_t infoStrings;
} uavforge_InfoPacket;

typedef struct _uavforge_TelemetryPacket {
    int32_t seqNo;
    float accx;
    float accy;
    float accz;
    float pitch;
    float roll;
    float yaw;
    double lat;
    double lng;
    float alt;
    float speed;
    int32_t barometer;
} uavforge_TelemetryPacket;

typedef struct _uavforge_Packet {
    uint64_t timestamp;
    pb_callback_t sender;
    pb_callback_t target;
    uavforge_Packet_MessageType type;
    pb_size_t which_contents;
    union {
        uavforge_TelemetryPacket telem;
        uavforge_ActionPacket comm;
        uavforge_InfoPacket info;
        uavforge_AckPacket ack;
    } contents;
} uavforge_Packet;

/* Default values for struct fields */

/* Initializer values for message structs */
#define uavforge_Packet_init_default             {0, {{NULL}, NULL}, {{NULL}, NULL}, (uavforge_Packet_MessageType)0, 0, {uavforge_TelemetryPacket_init_default}}
#define uavforge_TelemetryPacket_init_default    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define uavforge_ActionPacket_init_default       {0, (uavforge_ActionPacket_ActionType)0, {{NULL}, NULL}}
#define uavforge_ActionPacket_WaypointPacket_init_default {0, 0, 0, 0, 0}
#define uavforge_InfoPacket_init_default         {false, 0, false, 0, {{NULL}, NULL}}
#define uavforge_AckPacket_init_default          {0}
#define uavforge_Packet_init_zero                {0, {{NULL}, NULL}, {{NULL}, NULL}, (uavforge_Packet_MessageType)0, 0, {uavforge_TelemetryPacket_init_zero}}
#define uavforge_TelemetryPacket_init_zero       {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define uavforge_ActionPacket_init_zero          {0, (uavforge_ActionPacket_ActionType)0, {{NULL}, NULL}}
#define uavforge_ActionPacket_WaypointPacket_init_zero {0, 0, 0, 0, 0}
#define uavforge_InfoPacket_init_zero            {false, 0, false, 0, {{NULL}, NULL}}
#define uavforge_AckPacket_init_zero             {0}

/* Field tags (for use in manual encoding/decoding) */
#define uavforge_AckPacket_ackTimestamp_tag      1
#define uavforge_ActionPacket_priority_tag       1
#define uavforge_ActionPacket_action_type_tag    2
#define uavforge_ActionPacket_waypoints_tag      3
#define uavforge_ActionPacket_WaypointPacket_seqNo_tag 1
#define uavforge_ActionPacket_WaypointPacket_lat_tag 2
#define uavforge_ActionPacket_WaypointPacket_lng_tag 3
#define uavforge_ActionPacket_WaypointPacket_alt_tag 4
#define uavforge_ActionPacket_WaypointPacket_speed_tag 5
#define uavforge_InfoPacket_pointsStorable_tag   1
#define uavforge_InfoPacket_battery_tag          2
#define uavforge_InfoPacket_infoStrings_tag      3
#define uavforge_TelemetryPacket_seqNo_tag       1
#define uavforge_TelemetryPacket_accx_tag        2
#define uavforge_TelemetryPacket_accy_tag        3
#define uavforge_TelemetryPacket_accz_tag        4
#define uavforge_TelemetryPacket_pitch_tag       5
#define uavforge_TelemetryPacket_roll_tag        6
#define uavforge_TelemetryPacket_yaw_tag         7
#define uavforge_TelemetryPacket_lat_tag         8
#define uavforge_TelemetryPacket_lng_tag         9
#define uavforge_TelemetryPacket_alt_tag         10
#define uavforge_TelemetryPacket_speed_tag       11
#define uavforge_TelemetryPacket_barometer_tag   12
#define uavforge_Packet_telem_tag                5

#define uavforge_Packet_comm_tag                 6

#define uavforge_Packet_info_tag                 8

#define uavforge_Packet_ack_tag                  9
#define uavforge_Packet_timestamp_tag            1
#define uavforge_Packet_sender_tag               2
#define uavforge_Packet_target_tag               3
#define uavforge_Packet_type_tag                 4

/* Struct field encoding specification for nanopb */
extern const pb_field_t uavforge_Packet_fields[9];
extern const pb_field_t uavforge_TelemetryPacket_fields[13];
extern const pb_field_t uavforge_ActionPacket_fields[4];
extern const pb_field_t uavforge_ActionPacket_WaypointPacket_fields[6];
extern const pb_field_t uavforge_InfoPacket_fields[4];
extern const pb_field_t uavforge_AckPacket_fields[2];

/* Maximum encoded size of messages (where known) */
#define uavforge_TelemetryPacket_size            80
#define uavforge_ActionPacket_WaypointPacket_size 39
#define uavforge_AckPacket_size                  11

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PACKET_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
