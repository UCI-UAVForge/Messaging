// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InfoPacket.proto

#ifndef PROTOBUF_InfoPacket_2eproto__INCLUDED
#define PROTOBUF_InfoPacket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace uavforge {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_InfoPacket_2eproto();
void protobuf_AssignDesc_InfoPacket_2eproto();
void protobuf_ShutdownFile_InfoPacket_2eproto();

class InfoPacket;

// ===================================================================

class InfoPacket : public ::google::protobuf::Message {
 public:
  InfoPacket();
  virtual ~InfoPacket();

  InfoPacket(const InfoPacket& from);

  inline InfoPacket& operator=(const InfoPacket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InfoPacket& default_instance();

  void Swap(InfoPacket* other);

  // implements Message ----------------------------------------------

  InfoPacket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InfoPacket& from);
  void MergeFrom(const InfoPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pointsStorable = 1;
  inline bool has_pointsstorable() const;
  inline void clear_pointsstorable();
  static const int kPointsStorableFieldNumber = 1;
  inline ::google::protobuf::uint32 pointsstorable() const;
  inline void set_pointsstorable(::google::protobuf::uint32 value);

  // optional uint32 battery = 2;
  inline bool has_battery() const;
  inline void clear_battery();
  static const int kBatteryFieldNumber = 2;
  inline ::google::protobuf::uint32 battery() const;
  inline void set_battery(::google::protobuf::uint32 value);

  // repeated string infoStrings = 3;
  inline int infostrings_size() const;
  inline void clear_infostrings();
  static const int kInfoStringsFieldNumber = 3;
  inline const ::std::string& infostrings(int index) const;
  inline ::std::string* mutable_infostrings(int index);
  inline void set_infostrings(int index, const ::std::string& value);
  inline void set_infostrings(int index, const char* value);
  inline void set_infostrings(int index, const char* value, size_t size);
  inline ::std::string* add_infostrings();
  inline void add_infostrings(const ::std::string& value);
  inline void add_infostrings(const char* value);
  inline void add_infostrings(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& infostrings() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_infostrings();

  // @@protoc_insertion_point(class_scope:uavforge.InfoPacket)
 private:
  inline void set_has_pointsstorable();
  inline void clear_has_pointsstorable();
  inline void set_has_battery();
  inline void clear_has_battery();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pointsstorable_;
  ::google::protobuf::uint32 battery_;
  ::google::protobuf::RepeatedPtrField< ::std::string> infostrings_;
  friend void  protobuf_AddDesc_InfoPacket_2eproto();
  friend void protobuf_AssignDesc_InfoPacket_2eproto();
  friend void protobuf_ShutdownFile_InfoPacket_2eproto();

  void InitAsDefaultInstance();
  static InfoPacket* default_instance_;
};
// ===================================================================


// ===================================================================

// InfoPacket

// optional uint32 pointsStorable = 1;
inline bool InfoPacket::has_pointsstorable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InfoPacket::set_has_pointsstorable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InfoPacket::clear_has_pointsstorable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InfoPacket::clear_pointsstorable() {
  pointsstorable_ = 0u;
  clear_has_pointsstorable();
}
inline ::google::protobuf::uint32 InfoPacket::pointsstorable() const {
  // @@protoc_insertion_point(field_get:uavforge.InfoPacket.pointsStorable)
  return pointsstorable_;
}
inline void InfoPacket::set_pointsstorable(::google::protobuf::uint32 value) {
  set_has_pointsstorable();
  pointsstorable_ = value;
  // @@protoc_insertion_point(field_set:uavforge.InfoPacket.pointsStorable)
}

// optional uint32 battery = 2;
inline bool InfoPacket::has_battery() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InfoPacket::set_has_battery() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InfoPacket::clear_has_battery() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InfoPacket::clear_battery() {
  battery_ = 0u;
  clear_has_battery();
}
inline ::google::protobuf::uint32 InfoPacket::battery() const {
  // @@protoc_insertion_point(field_get:uavforge.InfoPacket.battery)
  return battery_;
}
inline void InfoPacket::set_battery(::google::protobuf::uint32 value) {
  set_has_battery();
  battery_ = value;
  // @@protoc_insertion_point(field_set:uavforge.InfoPacket.battery)
}

// repeated string infoStrings = 3;
inline int InfoPacket::infostrings_size() const {
  return infostrings_.size();
}
inline void InfoPacket::clear_infostrings() {
  infostrings_.Clear();
}
inline const ::std::string& InfoPacket::infostrings(int index) const {
  // @@protoc_insertion_point(field_get:uavforge.InfoPacket.infoStrings)
  return infostrings_.Get(index);
}
inline ::std::string* InfoPacket::mutable_infostrings(int index) {
  // @@protoc_insertion_point(field_mutable:uavforge.InfoPacket.infoStrings)
  return infostrings_.Mutable(index);
}
inline void InfoPacket::set_infostrings(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:uavforge.InfoPacket.infoStrings)
  infostrings_.Mutable(index)->assign(value);
}
inline void InfoPacket::set_infostrings(int index, const char* value) {
  infostrings_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:uavforge.InfoPacket.infoStrings)
}
inline void InfoPacket::set_infostrings(int index, const char* value, size_t size) {
  infostrings_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:uavforge.InfoPacket.infoStrings)
}
inline ::std::string* InfoPacket::add_infostrings() {
  return infostrings_.Add();
}
inline void InfoPacket::add_infostrings(const ::std::string& value) {
  infostrings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:uavforge.InfoPacket.infoStrings)
}
inline void InfoPacket::add_infostrings(const char* value) {
  infostrings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:uavforge.InfoPacket.infoStrings)
}
inline void InfoPacket::add_infostrings(const char* value, size_t size) {
  infostrings_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:uavforge.InfoPacket.infoStrings)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
InfoPacket::infostrings() const {
  // @@protoc_insertion_point(field_list:uavforge.InfoPacket.infoStrings)
  return infostrings_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
InfoPacket::mutable_infostrings() {
  // @@protoc_insertion_point(field_mutable_list:uavforge.InfoPacket.infoStrings)
  return &infostrings_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace uavforge

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_InfoPacket_2eproto__INCLUDED
