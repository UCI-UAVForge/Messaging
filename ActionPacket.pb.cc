// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActionPacket.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ActionPacket.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace uavforge {

namespace {

const ::google::protobuf::Descriptor* ActionPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionPacket_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ActionPacket_ActionType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ActionPacket_2eproto() {
  protobuf_AddDesc_ActionPacket_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ActionPacket.proto");
  GOOGLE_CHECK(file != NULL);
  ActionPacket_descriptor_ = file->message_type(0);
  static const int ActionPacket_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionPacket, priority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionPacket, action_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionPacket, waypoints_),
  };
  ActionPacket_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActionPacket_descriptor_,
      ActionPacket::default_instance_,
      ActionPacket_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionPacket, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionPacket, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActionPacket));
  ActionPacket_ActionType_descriptor_ = ActionPacket_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ActionPacket_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActionPacket_descriptor_, &ActionPacket::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ActionPacket_2eproto() {
  delete ActionPacket::default_instance_;
  delete ActionPacket_reflection_;
}

void protobuf_AddDesc_ActionPacket_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::uavforge::protobuf_AddDesc_WaypointPacket_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022ActionPacket.proto\022\010uavforge\032\024Waypoint"
    "Packet.proto\"\375\001\n\014ActionPacket\022\020\n\010priorit"
    "y\030\001 \002(\005\0226\n\013action_type\030\002 \002(\0162!.uavforge."
    "ActionPacket.ActionType\022+\n\twaypoints\030\003 \003"
    "(\0132\030.uavforge.WaypointPacket\"v\n\nActionTy"
    "pe\022\t\n\005START\020\000\022\020\n\014REQUEST_INFO\020\001\022\020\n\014ADD_W"
    "AYPOINT\020\002\022\014\n\010SET_HOME\020\003\022\023\n\017REMOVE_WAYPOI"
    "NT\020\004\022\010\n\004STOP\020\016\022\014\n\010SHUTDOWN\020\017", 308);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ActionPacket.proto", &protobuf_RegisterTypes);
  ActionPacket::default_instance_ = new ActionPacket();
  ActionPacket::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ActionPacket_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ActionPacket_2eproto {
  StaticDescriptorInitializer_ActionPacket_2eproto() {
    protobuf_AddDesc_ActionPacket_2eproto();
  }
} static_descriptor_initializer_ActionPacket_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* ActionPacket_ActionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionPacket_ActionType_descriptor_;
}
bool ActionPacket_ActionType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ActionPacket_ActionType ActionPacket::START;
const ActionPacket_ActionType ActionPacket::REQUEST_INFO;
const ActionPacket_ActionType ActionPacket::ADD_WAYPOINT;
const ActionPacket_ActionType ActionPacket::SET_HOME;
const ActionPacket_ActionType ActionPacket::REMOVE_WAYPOINT;
const ActionPacket_ActionType ActionPacket::STOP;
const ActionPacket_ActionType ActionPacket::SHUTDOWN;
const ActionPacket_ActionType ActionPacket::ActionType_MIN;
const ActionPacket_ActionType ActionPacket::ActionType_MAX;
const int ActionPacket::ActionType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ActionPacket::kPriorityFieldNumber;
const int ActionPacket::kActionTypeFieldNumber;
const int ActionPacket::kWaypointsFieldNumber;
#endif  // !_MSC_VER

ActionPacket::ActionPacket()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:uavforge.ActionPacket)
}

void ActionPacket::InitAsDefaultInstance() {
}

ActionPacket::ActionPacket(const ActionPacket& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:uavforge.ActionPacket)
}

void ActionPacket::SharedCtor() {
  _cached_size_ = 0;
  priority_ = 0;
  action_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActionPacket::~ActionPacket() {
  // @@protoc_insertion_point(destructor:uavforge.ActionPacket)
  SharedDtor();
}

void ActionPacket::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActionPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionPacket_descriptor_;
}

const ActionPacket& ActionPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ActionPacket_2eproto();
  return *default_instance_;
}

ActionPacket* ActionPacket::default_instance_ = NULL;

ActionPacket* ActionPacket::New() const {
  return new ActionPacket;
}

void ActionPacket::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ActionPacket*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(priority_, action_type_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  waypoints_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActionPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:uavforge.ActionPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 priority = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
          set_has_priority();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_action_type;
        break;
      }

      // required .uavforge.ActionPacket.ActionType action_type = 2;
      case 2: {
        if (tag == 16) {
         parse_action_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::uavforge::ActionPacket_ActionType_IsValid(value)) {
            set_action_type(static_cast< ::uavforge::ActionPacket_ActionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_waypoints;
        break;
      }

      // repeated .uavforge.WaypointPacket waypoints = 3;
      case 3: {
        if (tag == 26) {
         parse_waypoints:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_waypoints()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_waypoints;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:uavforge.ActionPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:uavforge.ActionPacket)
  return false;
#undef DO_
}

void ActionPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:uavforge.ActionPacket)
  // required int32 priority = 1;
  if (has_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->priority(), output);
  }

  // required .uavforge.ActionPacket.ActionType action_type = 2;
  if (has_action_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->action_type(), output);
  }

  // repeated .uavforge.WaypointPacket waypoints = 3;
  for (int i = 0; i < this->waypoints_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->waypoints(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:uavforge.ActionPacket)
}

::google::protobuf::uint8* ActionPacket::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:uavforge.ActionPacket)
  // required int32 priority = 1;
  if (has_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->priority(), target);
  }

  // required .uavforge.ActionPacket.ActionType action_type = 2;
  if (has_action_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->action_type(), target);
  }

  // repeated .uavforge.WaypointPacket waypoints = 3;
  for (int i = 0; i < this->waypoints_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->waypoints(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uavforge.ActionPacket)
  return target;
}

int ActionPacket::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 priority = 1;
    if (has_priority()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->priority());
    }

    // required .uavforge.ActionPacket.ActionType action_type = 2;
    if (has_action_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->action_type());
    }

  }
  // repeated .uavforge.WaypointPacket waypoints = 3;
  total_size += 1 * this->waypoints_size();
  for (int i = 0; i < this->waypoints_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->waypoints(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionPacket::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActionPacket* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActionPacket*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActionPacket::MergeFrom(const ActionPacket& from) {
  GOOGLE_CHECK_NE(&from, this);
  waypoints_.MergeFrom(from.waypoints_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_priority()) {
      set_priority(from.priority());
    }
    if (from.has_action_type()) {
      set_action_type(from.action_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActionPacket::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionPacket::CopyFrom(const ActionPacket& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionPacket::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->waypoints())) return false;
  return true;
}

void ActionPacket::Swap(ActionPacket* other) {
  if (other != this) {
    std::swap(priority_, other->priority_);
    std::swap(action_type_, other->action_type_);
    waypoints_.Swap(&other->waypoints_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActionPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionPacket_descriptor_;
  metadata.reflection = ActionPacket_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace uavforge

// @@protoc_insertion_point(global_scope)
